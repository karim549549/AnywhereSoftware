import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { ThemeProvider } from "@/components/providers/ThemeProvider";
import { hasLocale, NextIntlClientProvider } from 'next-intl';
import "../globals.css";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { Provider } from 'react-redux';
import { store } from '@/store/store';
import { ErrorProvider } from '@/components/providers/ErrorProvider';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
    params: Promise<{locale: string}>;
}>) {
  const {locale}  =  await params;
  if(!hasLocale(routing.locales, locale)) {
    notFound();
  }
  return (
    <html lang={locale}  suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Provider store={store}>
          <NextIntlClientProvider >
            <ThemeProvider  
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange 
            >
              <ErrorProvider>
                {children}
              </ErrorProvider>
            </ThemeProvider>
          </NextIntlClientProvider>
        </Provider>
      </body>
    </html>
  );
}
